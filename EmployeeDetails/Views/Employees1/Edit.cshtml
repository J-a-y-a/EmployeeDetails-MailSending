@model EmployeeDetails.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Employees1", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmpID)

        <div class="form-group">
            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, "Male")<span>Male</span>
                @Html.RadioButtonFor(model => model.Gender, "Female")<span>Female</span>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string formattedDate = string.Format("{0:yyyy-MM-dd}", Model.DOB);
                }
                <input type="date" id="DOB" name="DOB" class="form-control" value="@formattedDate" />
                @*  @Html.EditorFor(model => model.DOB.ToString, new { htmlAttributes = new { @class = "form-control", @type = "date" } })*@
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Place, new List<SelectListItem>
                       {
                           new SelectListItem{ Text="--Please Select--", Value = "" },
                           new SelectListItem{ Text="ANDHRA PRADESH", Value = "ANDHRA PRADESH" },
                           new SelectListItem{ Text="TELANGANA", Value = "TELANGANA" },
                           new SelectListItem{ Text="TAMILNADU", Value = "TAMILNADU" },
                           new SelectListItem{ Text="KERALA", Value = "KERALA" },
                           new SelectListItem{ Text="KARNATAKA", Value = "KARNATAKA" }

                       }, htmlAttributes: new { @class = "form-control ", @title = "Please Choose State" })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="empimage" name="empimage" />
                @*@Html.TextBoxFor(model => model.Photo, "", new { @type = "file", @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
